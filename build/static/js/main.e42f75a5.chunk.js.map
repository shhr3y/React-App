{"version":3,"sources":["components/HeaderComponent.js","components/LoadingComponent.js","shared/baseURL.js","components/HomeComponent.js","components/MenuComponent.js","components/CommentFormComponent.js","components/DishDetailsComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","event","this","alert","username","value","password","remember","checked","preventDefault","setState","Fragment","Navbar","dark","expand","fixed","className","NavbarToggler","onClick","NavbarBrand","href","src","height","width","alt","Collapse","isOpen","navbar","Nav","NavItem","to","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","check","color","Component","Loading","baseURL","Home","RenderCard","item","isLoading","errMess","in","tranformProps","exitTransform","Card","CardImg","image","CardBody","CardTitle","designation","CardSubtitle","CardText","description","featuredDish","dishesLoading","dishesErrMess","featuredPromotion","promotionsLoading","promotionsErrMess","featuredLeader","leadersLoading","leadersErrMess","Menu","menu","dishes","map","dish","key","CardImgOverlay","RenderDishCards","Breadcrumb","BreadcrumbItem","active","required","length","maxLength","CommentForm","handleSubmit","values","postComment","selectedDishID","rating","comment","centered","Row","md","Col","select","model","text","validators","minLength","placeholder","show","messages","textarea","rows","DishDetail","RenderSelectedDishCard","RenderSelectedDishComments","selectedDish","comments","dishComments","author","title","Intl","DateTimeFormat","month","year","day","format","Date","parse","date","submitCommentButtom","push","selectedComment","About","leaders","leader","Media","left","middle","object","body","heading","CardHeader","list","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","phone","email","message","agree","contactType","resetFeedbackForm","role","size","offset","checkbox","Footer","commentsFailed","payload","addComments","dishesFailed","addDishes","promotionsFailed","addPromotions","promotions","leadersFailed","addLeaders","Main","fetchDishes","fetchPromotions","fetchComments","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotion","exact","match","parseInt","params","dishID","ErrMess","dishId","commentsIsLoading","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","newFeedback","actions","reset","Dishes","action","Comments","concat","Leaders","Promotions","InitialFeedback","fistname","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e42f75a5.chunk.js","sourcesContent":["import React,{Component} from 'react'\nimport { Navbar, NavbarBrand, Nav, Jumbotron, NavItem, Collapse, NavbarToggler, Modal, ModalHeader, ModalBody, Button ,Form, FormGroup, Label, Input } from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\n\n\nclass Header extends Component{\n     \n     constructor(props){\n          super(props);\n\n          this.state = {\n               isNavOpen : false,\n               isModalOpen : false,\n          };\n          this.toggleNav = this.toggleNav.bind(this);\n          this.toggleModal = this.toggleModal.bind(this);\n          this.handleLogin = this.handleLogin.bind(this);\n     }\n\n     handleLogin(event){\n          this.toggleModal();\n          alert(\"username:\"+this.username.value+\"  pass:\"+this.password.value+\"  remember:\"+this.remember.checked);\n          event.preventDefault();\n     }\n\n     toggleNav(){\n          this.setState({\n               isNavOpen : !this.state.isNavOpen, \n          });\n     }\n\n     toggleModal(){\n          this.setState({\n               isModalOpen : !this.state.isModalOpen, \n          });\n     }\n\n     \n     render(){\n\n          return(\n               <React.Fragment>\n                    \n                         <Navbar dark expand=\"md\" fixed=\"top\">\n                              <div className=\"container\">\n                                   <NavbarToggler onClick={this.toggleNav}/>\n                                   <NavbarBrand className=\"mr-auto\" href=\"/\">\n                                        <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\"/> \n                                   </NavbarBrand>\n                                   <Collapse isOpen={this.state.isNavOpen} navbar>\n                                        <Nav navbar>\n                                             <NavItem>\n                                                  <NavLink className=\"nav-link\" to=\"/home\">\n                                                       <span className=\"fa fa-home icon\"></span> Home\n                                                  </NavLink>\n                                             </NavItem>\n                                             <NavItem>\n                                                  <NavLink className=\"nav-link\" to=\"/menu\">\n                                                       <span className=\"fa fa-list icon\"></span> Menu\n                                                  </NavLink>\n                                             </NavItem>\n                                             <NavItem>\n                                                  <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                                       <span className=\"fa fa-info icon\"></span> About Us\n                                                  </NavLink>\n                                             </NavItem>\n                                             <NavItem>\n                                                  <NavLink className=\"nav-link\" to=\"/contactus\">\n                                                       <span className=\"fa fa-address-card icon\"></span> Contact Us\n                                                  </NavLink>\n                                             </NavItem>\n                                        </Nav>\n                                        <Nav className='ml-auto' navbar>\n                                             <NavItem>\n                                                  <Button outline onClick={this.toggleModal}>\n                                                       <span className='fa fa-sign-in fa-lg'/> Login\n                                                  </Button>\n                                             </NavItem>\n                                        </Nav>\n                                   </Collapse>\n                              </div>\n                         </Navbar>\n                         <Jumbotron>\n                              <div className=\"container\">\n                                   <div className=\"row row-header\">\n                                        <div className=\"col-12 col-sm-6\">\n                                             <h1>Ristorante Con Fusion</h1>\n                                             <p>We take inspiration from World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                                        </div>\n                                   </div>\n                              </div>\n                         </Jumbotron>\n                         <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                              <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                              <ModalBody>\n                                   <Form onSubmit={this.handleLogin}>\n                                        <FormGroup>\n                                             <Label htmlFor=\"username\">Username </Label>\n                                             <Input type='text' id='username' name='username' innerRef={(input)=>this.username=input}/>\n                                        </FormGroup>\n                                        <FormGroup>\n                                             <Label htmlFor=\"password\">password </Label>\n                                             <Input type='password' id='password' name='password'innerRef={(input)=>this.password=input}/>\n                                        </FormGroup>\n                                        <FormGroup check>\n                                             <Label check>\n                                                  <Input type=\"checkbox\" name='remember' innerRef={(input)=>this.remember=input}/> Keep me logged in?\n                                             </Label>\n                                        </FormGroup><br/>\n                                        <div className='text-center'>\n                                             <Button className='btn btn-primary btn-lg btn-block' type='submit' value='submit' color='primary'>Sign in</Button>\n                                        </div>\n                                   </Form>\n                              </ModalBody>\n                         </Modal>\n               </React.Fragment>\n          );\n     }\n}\n\nexport default Header;","import React from 'react'\n\nexport const Loading = () => {\n     return(\n          <div className='col-12'>\n               <span className='fa fa-spinner fa-pulse fa-3x fa-fw text-primary'></span>\n               <p>Loading...</p>\n          </div>\n     );\n};","export const baseURL = 'http://localhost:3001/';","import React from 'react'\nimport { Card, CardImg, CardBody, CardTitle, CardSubtitle, CardText } from 'reactstrap'\nimport {Loading} from './LoadingComponent'\nimport {baseURL} from '../shared/baseURL';\nimport { FadeTransform} from 'react-animation-components';\n\nfunction Home(props) {\n     \n     function RenderCard({item,isLoading,errMess}){\n\n          if(isLoading){\n               return(\n                    <div>\n                         <div className=\"text-center mt-6\">\n                              <Loading/>\n                         </div>\n                    </div>\n               );\n          }\n          else if(errMess){\n               return(\n                    <h4>{errMess}</h4>\n               );\n          }\n          else{\n               return(\n                    <FadeTransform in tranformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\n                         <Card>\n                              <CardImg src={baseURL+item.image} alt={item.name}/>\n                              <CardBody>\n                                   <CardTitle>{item.name}</CardTitle>\n                                   {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                                   <CardText>{item.description}</CardText>\n                              </CardBody>\n                         </Card>\n                    </FadeTransform>\n               );\n          }\n     }\n\n     return(\n          <div className=\"container\">\n               <div className=\"row align-items-start\">\n                    <div className=\"col-12 col-md m-1\">\n                         <RenderCard \n                              item= {props.featuredDish} \n                              isLoading={props.dishesLoading} \n                              errMess={props.dishesErrMess}\n                         />\n                    </div>\n                    <div className=\"col-12 col-md m-1\">\n                         <RenderCard \n                              item= {props.featuredPromotion}\n                              isLoading={props.promotionsLoading} \n                              errMess={props.promotionsErrMess}\n                         />\n                    </div>\n                    <div className=\"col-12 col-md m-1\">\n                         <RenderCard \n                              item= {props.featuredLeader}\n                              isLoading={props.leadersLoading} \n                              errMess={props.leadersErrMess}\n                         />\n                    </div>\n               </div>\n          </div>\n     );\n}\n\nexport default Home;","import React, {} from 'react';\nimport { Card,CardImg,CardImgOverlay,CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport {baseURL} from '../shared/baseURL';\n\n\n\nfunction RenderDishCards(dish){\n     return(\n          <Link to={`menu/${dish.id}`}>\n               <Card>\n                    <CardImg width=\"100%\"  src={baseURL+dish.image} alt={dish.name}/>\n                    <CardImgOverlay>\n                         <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\n               </Card>\n          </Link>\n     );\n}\n\nfunction Menu(props) {\n     \n     const menu = props.dishes.dishes.map((dish) => {\n          return(\n               <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                         {RenderDishCards(dish)}    \n               </div>\n          );\n     });\n\n     if(props.dishes.isLoading){\n          return(\n               <div className='container'>\n                    <div className='row'>\n                         <Loading/>\n                    </div>\n               </div>\n          );\n     }\n     else if(props.dishes.errMess){\n          return(\n               <div className='container'>\n                    <div className='row'>\n                         <h4>{props.dishes.errMess}</h4>\n                    </div>\n               </div>\n          );\n     }\n\n     else{\n          return (\n               <div>\n                    <Breadcrumb>\n                         <div className=\"container\">\n                              <div className=\"row\">\n                                   <BreadcrumbItem><Link to=\"home\"> Home</Link></BreadcrumbItem>\n                                   <BreadcrumbItem active>Menu</BreadcrumbItem>\n                              </div>\n                         </div>\n                    </Breadcrumb>   \n                    \n                    <div className=\"container\">\n                         <div>\n                              <br/><h3>Menu</h3><hr/>\n                         </div>\n                         <div className=\"row row-content\">\n                              {menu}   \n                         </div>\n                    </div>\n               </div>\n     \n          );\n     }\n}\n\n\nexport default Menu;","import React, { Component } from 'react';\nimport {Label,Button, Modal,ModalBody,ModalHeader,Row,Col} from 'reactstrap'\nimport { Control,LocalForm, Errors } from 'react-redux-form';\n\n\nconst required = (value) => value && value.length;\nconst maxLength = (length) => (value) => !(value)||(value.length<=length);\nconst minLength = (length) => (value) => (value)&&(value.length>=length);\n\n\n\nclass CommentForm extends Component{\n\n     constructor(props){\n          super(props);\n\n          this.state={\n               isModalOpen : false\n          }\n\n          this.handleSubmit = this.handleSubmit.bind(this);\n          this.toggleModal = this.toggleModal.bind(this);\n     }\n\n     toggleModal(){\n          this.setState({\n               isModalOpen : !this.state.isModalOpen, \n          });\n     }\n\n     handleSubmit(values){\n          this.toggleModal();\n          this.props.postComment(this.props.selectedDishID,values.rating,values.name,values.comment);\n      }\n\n     render(){ \n          return(\n               <div>\n                    <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} centered >\n                         <ModalHeader toggle={this.props.toggle}>Submit Comment</ModalHeader>\n                         <ModalBody>\n                              <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\n                                   <Row className='form-group'>\n                                        <Label htmlFor=\"rating\" md={12}>Rating</Label>\n                                        <Col md={12}>\n                                        <Control.select \n                                             model=\".rating\" \n                                             className='form-control'\n                                             name=\"rating\">\n                                                  <option>1</option>\n                                                  <option>2</option>\n                                                  <option>3</option>\n                                                  <option>4</option>\n                                                  <option>5</option>\n                                        </Control.select>\n                                        </Col>\n                                   </Row>\n                                   <Row className='form-group'>\n                                        <Label htmlFor=\"name\" md={12}>Your Name</Label>\n                                        <Col md={12}>\n                                        <Control.text \n                                             model=\".name\" \n                                             className='form-control' \n                                             id=\"name\" \n                                             name=\"name\" \n                                             validators={{\n                                                  required,\n                                                  minLength: minLength(3),\n                                                  maxLength: maxLength(15)\n                                             }}\n                                             placeholder=\"Your Name\">\n                                        </Control.text>\n                                        <Errors\n                                             className='text-danger'\n                                             model='.name'\n                                             show='touched'\n                                             messages={{\n                                                  required:'Required! ',\n                                                  minLength:'Must be greater than 2 Characters! ',\n                                                  maxLength:'Must be less than 16 Characters! '\n                                             }}\n                                        />\n                                        </Col>\n                                   </Row>\n                                   <Row className='form-group'>\n                                        <Label htmlFor=\"comment\" md={12}>Comment</Label>\n                                        <Col md={12}>\n                                             <Control.textarea \n                                             model=\".comment\" \n                                             rows={5} \n                                             id=\"comment\" \n                                             className='form-control'\n                                             name=\"comment\" \n                                             placeholder=\"Your Comment here\">\n                                             </Control.textarea>\n                                        </Col>\n                                   </Row>     \n                                   <div className='text-center'>\n                                        <Button type='submit' color='primary'>Submit</Button>\n                                   </div>\n                              </LocalForm>\n                         </ModalBody>\n                    </Modal>\n               </div>\n          );\n     }\n}\n\n\nexport default CommentForm;","import React, { Component } from 'react';\nimport {Card, CardImg, CardTitle, CardBody, CardText, Breadcrumb, BreadcrumbItem,Button,} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport CommentForm from './CommentFormComponent'\nimport {Loading} from './LoadingComponent'\nimport { baseURL } from '../shared/baseURL';\nimport { FadeTransform , Fade} from 'react-animation-components';\n\nclass DishDetail extends Component{\n\n     constructor(props){\n          super(props);\n\n          this.state = {\n               isModalOpen : false\n          }\n\n          this.RenderSelectedDishCard = this.RenderSelectedDishCard.bind(this);\n          this.RenderSelectedDishComments = this.RenderSelectedDishComments.bind(this);\n          this.toggleModal = this.toggleModal.bind(this);\n     }\n     \n     RenderSelectedDishCard(selectedDish){\n          return(\n               <div className='mt-3'> \n                    <FadeTransform in tranformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\n                         <Card>\n                              <CardImg width=\"100%\" src={ baseURL+ selectedDish.image} alt={selectedDish.name}/>\n                              <CardBody>\n                                   <CardTitle>{selectedDish.name}</CardTitle>\n                                   <CardText>{selectedDish.description}</CardText>\n                              </CardBody>\n                         </Card>\n                    </FadeTransform>\n               </div>\n          );\n     }\n     \n     RenderSelectedDishComments(comments){\n     \n          var dishComments = comments.map((comment) => {\n               return(\n                    <Fade in>                         \n                         <div key={comment.id} className='mt-3'> \n                              <Card>\n                                   <CardBody className=\"bg-faded\">\n                                        <blockquote className=\"blockquote\">\n                                        <p className=\"mb-0\">{comment.comment}</p>\n                                             <footer className=\"blockquote-footer\">{comment.author},\n                                             <cite title=\"Source Title\">{new Intl.DateTimeFormat('en-US',{month:'short',year:'numeric',day:'2-digit'}).format(new Date(Date.parse(comment.date)))}</cite>\n                                             </footer>\n                                        </blockquote>\n                                   </CardBody>\n                              </Card>\n                         </div>\n                    </Fade>\n               );\n          });\n     \n          const submitCommentButtom = \n               <div className='text-center'>\n                    <br/>\n                    <Button outline onClick={this.toggleModal}><span className='fa fa-pencil fa-lg'/> Submit Comment</Button>\n               </div>\n     \n          dishComments.push(submitCommentButtom);\n          \n          return dishComments;\n     }\n\n     toggleModal(){\n          this.setState({\n               isModalOpen : !this.state.isModalOpen, \n          });\n     }\n     \n     render(){\n     \n          const selectedDish = this.props.dish;\n          const selectedComment = this.props.comment;\n\n          if(this.props.isLoading){\n               return(\n                    <div className='container'>\n                         <div className='row'>\n                              <Loading/>\n                         </div>\n                    </div>\n               );\n          }\n          else if(this.props.errMess){\n               return(\n                    <div className='container'>\n                         <div className='row'>\n                              <h4>{this.props.errMess}</h4>\n                         </div>\n                    </div>\n               );\n          }\n          else if(selectedDish!=null){          \n               return(\n                    <div>\n                         <Breadcrumb>\n                              <div className='container'>\n                                   <div className=\"row\">\n                                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                                        <BreadcrumbItem active>{selectedDish.name}</BreadcrumbItem>\n                                   </div>\n                              </div>\n                         </Breadcrumb>\n                         <div className=\"container\">\n                              <div className=\"row row-content\">\n                                   <div key='selectedDish' className=\"col-12 col-md-5 m-2\">\n                                        <h4>{selectedDish.name}</h4>   \n                                        {this.RenderSelectedDishCard(selectedDish)}\n                                   </div>\n                                   <div key='selectedDishComments' className=\"col-12 col-md-5 m-2\">\n                                        <h4>Comments</h4>\n                                        {this.RenderSelectedDishComments(selectedComment)}\n                                   </div>\n                              </div>\n                         </div>\n                         <CommentForm \n                              isOpen={this.state.isModalOpen} \n                              toggle={this.toggleModal} \n                              selectedDishID={selectedDish.id} \n                              postComment={this.props.postComment} \n                         />\n                    </div>\n               );\n          }\n          else{\n               return(\n                    <div>\n                    </div>\n               );\n          }\n     }\n}\n\n\n\nexport default DishDetail;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseURL } from '../shared/baseURL';\nimport { Loading } from './LoadingComponent';\nimport { Fade } from 'react-animation-components' \n\n\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <Fade in>\n                <div key={leader.id} className=\"col-12 mt-5\">\n                    <Media>\n                        <Media left middle>\n                            <Media object src={baseURL+leader.image} alt={leader.name}/>\n                        </Media>\n                        <Media body className=\"ml-5\">\n                            <Media heading>{leader.name}</Media>\n                            <h6>{leader.designation}</h6>\n                            <p>{leader.description}</p>\n                        </Media>\n                    </Media>\n                </div>\n            </Fade>\n        );\n    });\n\n    if(props.leaders.isLoading){\n        return(\n             <div className='container'>\n                  <div className='row text-center'>\n                       <Loading/>\n                  </div>\n             </div>\n        );\n   }\n   else if(props.leaders.errMess){\n        return(\n             <div className='container'>\n                  <div className='row text-center'>\n                       <h4>{props.dishes.errMess}</h4>\n                  </div>\n             </div>\n        );\n   }\n\n   else{\n        return(\n            <div>\n                <Breadcrumb>\n                    <div className='container'>\n                        <div className=\"row\">\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>About Us</BreadcrumbItem>\n                        </div>\n                    </div>\n                </Breadcrumb>\n                <div className=\"container\">\n                    <div className=\"col-12\">\n                        <br/><h3>About Us</h3><hr/>\n                    </div>\n                    <div className=\"row row-content\">\n                        <div className=\"col-12 col-md-6\">\n                            <h2>Our History</h2>\n                            <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                            <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                        </div>\n                        <div className=\"col-12 col-md-5\">\n                            <Card>\n                                <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                                <CardBody>\n                                    <dl className=\"row p-1\">\n                                        <dt className=\"col-6\">Started</dt>\n                                        <dd className=\"col-6\">3 Feb. 2013</dd>\n                                        <dt className=\"col-6\">Major Stake Holder</dt>\n                                        <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                        <dt className=\"col-6\">Last Year's Turnover</dt>\n                                        <dd className=\"col-6\">$1,250,375</dd>\n                                        <dt className=\"col-6\">Employees</dt>\n                                        <dd className=\"col-6\">40</dd>\n                                    </dl>\n                                </CardBody>\n                            </Card>\n                        </div>\n                        \n                        <div className=\"col-12 mt-3\">\n                            <Card>\n                                <CardBody className=\"bg-faded\">\n                                    <blockquote className=\"blockquote\">\n                                        <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                            I'm not hungry enough to eat six.</p>\n                                        <footer className=\"blockquote-footer\">Yogi Berra,\n                                        <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                            P. Pepe, Diversion Books, 2014</cite>\n                                        </footer>\n                                    </blockquote>\n                                </CardBody>\n                            </Card>\n                        </div>\n                    </div>\n                    <div className=\"row row-content\">\n                        <div className=\"col-12\">\n                            <h2>Corporate Leadership</h2>\n                        </div>\n                        <div className=\"col-12\">\n                            <Media list>\n                                {leaders}\n                            </Media>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default About;    ","import React,{Component} from 'react';\nimport { BreadcrumbItem, Breadcrumb, Label, Col, Button, Row } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { Control,Form, Errors } from 'react-redux-form';\n\n\n\nconst required = (value) => value && value.length;\nconst maxLength = (length) => (value) => !(value)||(value.length<=length);\nconst minLength = (length) => (value) => (value)&&(value.length>=length);\nconst isNumber = (value) => !isNaN(Number(value));\nconst validEmail = (value) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value);\n\n\nclass Contact extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values){\n        this.props.postFeedback(values.firstname,values.lastname,values.phone,values.email,values.message,values.agree,values.contactType);\n        this.props.resetFeedbackForm();\n    }\n\n    render(){\n        return(\n            <div>\n                <div>\n                    <Breadcrumb>\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                            </div>\n                        </div>\n                    </Breadcrumb>\n                </div>\n                <div className=\"container\">\n                    <br/><h3>Contact Us</h3><hr/>\n                    <div className=\"row row-content\">\n                        <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                        </div>\n                        <div className=\"col-12 col-sm-4 offset-sm-1\">\n                                <h5>Our Address</h5>\n                                <address>\n                                121, Clear Water Bay Road<br />\n                                Clear Water Bay, Kowloon<br />\n                                HONG KONG<br />\n                                <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                                <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                                <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                                </address>\n                        </div>\n                        <div className=\"col-12 col-sm-6 offset-sm-1\">\n                            <h5>Map of our Location</h5>\n                        </div>\n                        <div className=\"col-12 col-sm-11 offset-sm-1\">\n                            <div className=\"btn-group\" role=\"group\">\n                                <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                                <a role=\"button\" className=\"btn btn-info\" href=\"/contactus\"><i className=\"fa fa-skype\"></i> Skype</a>\n                                <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='row row-content'>\n                        <div className='col-12'>\n                            <h3>Share us your Feedback!</h3><br/>\n                        </div>\n                        <div className=\"col-12 col-md-9\">\n                            <Form model='feedback' onSubmit={(values)=>this.handleSubmit(values)}>\n                                <Row className='form-group'>\n                                    <Label htmlFor=\"firstname\" md={3}>First Name</Label>\n                                    <Col md={9}>\n                                        <Control.text \n                                            model=\".firstname\" \n                                            className='form-control' \n                                            id=\"firstname\" \n                                            name=\"firstname\" \n                                            validators={{\n                                                required,\n                                                minLength: minLength(3),\n                                                maxLength: maxLength(15)\n                                            }}\n                                            placeholder=\"First Name\">\n                                        </Control.text>\n                                        <Errors\n                                            className='text-danger'\n                                            model='.firstname'\n                                            show='touched'\n                                            messages={{\n                                                required:'Required! ',\n                                                minLength:'Must be greater than 2 Characters! ',\n                                                maxLength:'Must be less than 16 Characters! '\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className='form-group'>\n                                    <Label htmlFor=\"lastname\" md={3}>Last Name</Label>\n                                    <Col md={9}>\n                                        <Control.text\n                                            model='.lastname'\n                                            className='form-control'\n                                            id=\"lastname\"\n                                            name=\"lastname\"\n                                            validators={{\n                                                required,\n                                                minLength: minLength(3),\n                                                maxLength: maxLength(15)\n                                            }}\n                                            placeholder=\"Last Name\">\n                                        </Control.text>\n                                        <Errors\n                                            className='text-danger'\n                                            model='.lastname'\n                                            show='touched'\n                                            messages={{\n                                                required:'Required! ',\n                                                minLength:'Must be greater than 2 Characters! ',\n                                                maxLength:'Must be less than 16 Characters! '\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className='form-group'>\n                                    <Label htmlFor=\"phone\" md={3}>Phone Number</Label>\n                                    <Col md={9}>\n                                        <Control.text \n                                            model='.phone'\n                                            className='form-control'\n                                            id=\"phone\" \n                                            name=\"phone\" \n                                            validators={{\n                                                required,\n                                                minLength: minLength(2),\n                                                maxLength: maxLength(10),\n                                                isNumber\n                                            }}\n                                            placeholder=\"Phone Number\">    \n                                        </Control.text>\n                                        <Errors\n                                            className='text-danger'\n                                            model='.phone'\n                                            show='touched'\n                                            messages={{\n                                                required:'Required! ',\n                                                minLength:'Must be greater than 2 Numbers! ',\n                                                maxLength:'Must be less than 11 Number! ',\n                                                isNumber:'Must be a Number',\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className='form-group'>\n                                    <Label htmlFor=\"email\" md={3}>Email</Label>\n                                    <Col md={9}>\n                                        <Control.text \n                                            model='.email'\n                                            className='form-control'\n                                            id=\"email\" \n                                            name=\"email\" \n                                            validators={{\n                                                required,\n                                                validEmail\n                                            }}\n                                            placeholder=\"Email\" >\n                                        </Control.text>\n                                        <Errors\n                                            className='text-danger'\n                                            model='.email'\n                                            show='touched'\n                                            messages={{\n                                                required:'Required! ',\n                                                validEmail:'Not an valid Email ',\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className='form-group'>\n                                    <Label htmlFor=\"message\" md={3}>Feedback</Label>\n                                    <Col md={9}>\n                                        <Control.textarea \n                                            model=\".message\" \n                                            rows={5} \n                                            id=\"message\" \n                                            className='form-control'\n                                            name=\"message\" \n                                            placeholder=\"Feedback\">\n                                        </Control.textarea>\n                                    </Col>\n                                </Row>\n                                <Row className='form-group'>\n                                    <Col md={{size:4,offset:3}}>\n                                        <div className='form-check'>\n                                            <Label check>\n                                                <Control.checkbox \n                                                    model='.agree' \n                                                    name=\"agree\" \n                                                    className='form-check-input'\n                                                />\n                                                <h6>\n                                                    <strong>May we contact you?</strong>\n                                                </h6>\n                                            </Label>\n                                        </div>\n                                    </Col>\n                                    <Col md={{size:3,offset:2}}>\n                                        <Control.select \n                                            model=\".contactType\" \n                                            className='form-control'\n                                            name=\"contactType\">\n                                                <option>Phone</option>\n                                                <option>Email</option>\n                                        </Control.select>\n                                    </Col>\n                                </Row>\n                                <Row className='form-group'>\n                                    <Col md={{size:10,offset:3}}>\n                                        <Button type='submit' color='primary'>Send Feedback</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Contact;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nfunction Footer(props){\n     \n     return(\n          <div className=\"footer\">\n               <div className=\"container\">\n                    <div className=\"row justify-content-center\">             \n                         <div className=\"col-4 offset-1 col-sm-2\">\n                              <h5>Links</h5>\n                              <ul className=\"list-unstyled\">\n                              <li><Link to=\"/home\">Home</Link></li>\n                              <li><Link to=\"/aboutus\">About</Link></li>\n                              <li><Link to=\"/menu\">Menu</Link></li>\n                              <li><Link to=\"/contact\">Contact</Link></li>\n                              </ul>\n                         </div>\n                         <div className=\"col-7 col-sm-5\">\n                              <h5>Our Address</h5>\n                              <address>\n                              121, Clear Water Bay Road<br />\n                              Clear Water Bay, Kowloon<br />\n                              HONG KONG<br />\n                              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                                   confusion@food.net</a>\n                              </address>\n                         </div>\n                         <div className=\"col-12 col-sm-4 align-self-center\">\n                              <div className=\"text-center\">\n                              <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                              <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                              <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                              <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                              <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                              <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                              </div>\n                         </div>\n                    </div>\n                    <div className=\"row justify-content-center\">             \n                         <div className=\"col-auto\">\n                              <p>© Copyright 2018 Ristorante Con Fusion</p>\n                         </div>\n                    </div>\n               </div>\n          </div>\n     );\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes'\nimport {baseURL} from '../shared/baseURL';\n\n\n\n//COMMENT\n\nexport const addComment = (comment) => ({  //display posted an comment\n     type:ActionTypes.ADD_COMMENT,\n     payload: comment,\n});\n\nexport const postComment = (dishID,rating,author,comment) => (dispatch) =>{   //post comment on server\n     const newComment = {\n          dishId:dishID,\n          rating:rating,\n          author:author,\n          comment:comment\n     }\n     newComment.date = new Date().toISOString();\n\n     return fetch(baseURL+'comments',{\n          method:'POST',\n          body: JSON.stringify(newComment),\n          headers: {\n               'Content-Type':'application/json'\n          },\n          credentials:'same-origin'\n     })\n     .then(response => {\n          if(response.ok){\n               return response;\n          }else{\n               var error = new Error('Error '+response.status+': '+response.statusText);\n               error.response = response;\n               throw error;\n          }\n     },error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n     })\n     .then(response => response.json())\n     .then(response => dispatch(addComment(response)))\n     .catch(error => {console.log('Post Comment ', error.message);\n          alert('Your comment could not be posted\\nError: '+error.message);})\n};\n\nexport const fetchComments = () => (dispatch) => {\n\n     return fetch(baseURL+'comments')\n               .then(response =>{\n                    if(response.ok){\n                         return response;\n                    }else{\n                         var error = new Error('Error '+response.status+': '+response.statusText);\n                         error.response = response;\n                         throw error;\n                    }\n               },error => {\n                    var errmess = new Error(error.message);\n                    throw errmess;\n               })\n               .then(response => response.json())\n               .then(comments => dispatch(addComments(comments)))\n               .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errMess)=>({\n     type: ActionTypes.COMMENTS_FAILED,\n     payload: errMess\n})\n\nexport const addComments =(comments)=>({\n     type: ActionTypes.ADD_COMMENTS,\n     payload: comments\n})\n\n//DISHES\nexport const fetchDishes = () => (dispatch) => {\n     dispatch(dishesLoading(true));\n\n     return fetch(baseURL+'dishes')\n               .then(response =>{\n                    if(response.ok){\n                         return response;\n                    }else{\n                         var error = new Error('Error '+response.status+': '+response.statusText);\n                         error.response = response;\n                         throw error;\n                    }\n               },error => {\n                    var errmess = new Error(error.message);\n                    throw errmess;\n               })\n               .then(response => response.json())\n               .then(dishes => dispatch(addDishes(dishes)))\n               .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = ()=>({\n     type: ActionTypes.DISHES_LOADING,\n\n})\n\nexport const dishesFailed = (errMess)=>({\n     type: ActionTypes.DISHES_FAILED,\n     payload: errMess\n})\n\nexport const addDishes =(dishes)=>({\n     type: ActionTypes.ADD_DISHES,\n     payload: dishes\n})\n\n\n\n\n//PROMOTIONS\nexport const fetchPromotions = () => (dispatch) => {\n     dispatch(promotionsLoading(true));\n\n     return fetch(baseURL+'promotions')\n               .then(response =>{\n                    if(response.ok){\n                         return response;\n                    }else{\n                         var error = new Error('Error '+response.status+': '+response.statusText);\n                         error.response = response;\n                         throw error;\n                    }\n               },error => {\n                    var errmess = new Error(error.message);\n                    throw errmess;\n               })\n               .then(response => response.json())\n               .then(promotions => dispatch(addPromotions(promotions)))\n               .catch(error => dispatch(promotionsFailed(error.message)));\n}\n\nexport const promotionsLoading = ()=>({\n     type: ActionTypes.PROMOS_LOADING,\n\n})\n\nexport const promotionsFailed = (errMess)=>({\n     type: ActionTypes.PROMOS_FAILED,\n     payload: errMess\n})\n\nexport const addPromotions =(promotions)=>({\n     type: ActionTypes.ADD_PROMOS,\n     payload: promotions\n})\n\n\n//LEADERS\nexport const fetchLeaders = () => (dispatch) => {\n     dispatch(leadersLoading(true));\n\n     return fetch(baseURL+'leaders')\n               .then(response =>{\n                    if(response.ok){\n                         return response;\n                    }else{\n                         var error = new Error('Error '+response.status+': '+response.statusText);\n                         error.response = response;\n                         throw error;\n                    }\n               },error => {\n                    var errmess = new Error(error.message);\n                    throw errmess;\n               })\n               .then(response => response.json())\n               .then(leaders => dispatch(addLeaders(leaders)))\n               .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = ()=>({\n     type: ActionTypes.LEADERS_LOADING,\n\n})\n\nexport const leadersFailed = (errMess)=>({\n     type: ActionTypes.LEADERS_FAILED,\n     payload: errMess\n})\n\nexport const addLeaders =(leaders)=>({\n     type: ActionTypes.ADD_LEADERS,\n     payload: leaders\n})\n\n\n\n\n//POST FEEDBACK\n\nexport const postFeedback = (firstname,lastname,phone,email,message,agree,contactType) => (dispatch) =>{   //post feedback on server\n     const newFeedback = {\n          firstname:firstname,\n          lastname:lastname,\n          phone:phone,\n          email:email,\n          message:message,\n          agree:agree,\n          contactType:contactType,\n     }\n     return fetch(baseURL+'feedback',{\n          method:'POST',\n          body: JSON.stringify(newFeedback),\n          headers: {\n               'Content-Type':'application/json'\n          },\n         credentials:'same-origin'\n     })\n     .then(response => {\n          if(response.ok){\n               return response;\n          }else{\n               var error = new Error('Error '+response.status+': '+response.statusText);\n               error.response = response;\n               throw error;\n          }\n     },error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n     })\n     .then(response => response.json())\n     .then(response => dispatch(alert(JSON.stringify(response))))\n     .catch(error => {\n          console.log('Post Feedback:', error.message);\n         // alert('Your feedback could not be posted\\nError: '+error.message);\n     });\n};","export const ADD_DISHES = 'ADD_DISHES';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\n\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\n\nexport const POST_FEEDBACK = 'POST_FEEDBACK'","import React, { Component } from 'react';\n\nimport Header from './HeaderComponent';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent'; \nimport DishDetail from './DishDetailsComponent';\nimport About from './AboutComponent';\nimport Contact from './ContactComponent';\nimport Footer from './FooterComponent';\n\nimport { Switch, Route, Redirect ,withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport {postComment,fetchDishes, fetchPromotions, fetchComments,fetchLeaders, postFeedback} from '../redux/ActionCreators'\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup,CSSTransition } from 'react-transition-group'\n\n\nconst mapStateToProps = state =>{\n  return{\n    dishes : state.dishes,\n    comments : state.comments,\n    leaders : state.leaders,\n    promotions : state.promotions,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  postComment: (dishID,rating,author,comment) => dispatch(postComment(dishID,rating,author,comment)),\n  postFeedback: (firstname,lastname,phone,email,message,agree,contactType) => dispatch(postFeedback(firstname,lastname,phone,email,message,agree,contactType)),\n  resetFeedbackForm: ()=>{dispatch(actions.reset('feedback'))},\n\n  fetchDishes: () => {dispatch(fetchDishes())},\n  fetchPromotions: () => {dispatch(fetchPromotions())},\n  fetchComments: () => {dispatch(fetchComments())},\n  fetchLeaders: () => {dispatch(fetchLeaders())},\n\n\n})\n\n\nclass Main extends Component {\n\n  componentDidMount(){\n    this.props.fetchDishes();\n    this.props.fetchPromotions();\n    this.props.fetchComments();\n    this.props.fetchLeaders();\n  }\n\n\n  render(){\n\n    const HomePage = ()=>{\n      return(\n        <div>\n          <Home \n            //Dishes\n            featuredDish = {this.props.dishes.dishes.filter((dish)=> dish.featured===true)[0]}\n            dishesLoading = {this.props.dishes.isLoading}\n            dishesErrMess = {this.props.dishes.errMess}\n            //Promotions\n            featuredPromotion = {this.props.promotions.promotions.filter((promotion)=> promotion.featured===true)[0]}\n            promotionsLoading = {this.props.promotions.isLoading}\n            promotionsErrMess = {this.props.promotions.errMess}\n            //Leaders\n            featuredLeader = {this.props.leaders.leaders.filter((leader)=> leader.featured===true)[0]}\n            leadersLoading = {this.props.leaders.isLoading}\n            leadersErrMess = {this.props.leaders.errMess}\n          />\n        </div>\n      );\n    }\n\n    const dishWithID = ({match})=>{\n\n      return(\n        <DishDetail\n          //Dish \n          dish = {this.props.dishes.dishes.filter((dish)=>dish.id === parseInt(match.params.dishID,10))[0]}\n          isLoading = {this.props.dishes.isLoading}\n          ErrMess = {this.props.dishes.errMess}\n          //Comments\n          comment = {this.props.comments.comments.filter((comment)=>comment.dishId === parseInt(match.params.dishID,10))}\n          commentsIsLoading = {this.props.comments.isLoading}\n          commentsErrMess = {this.props.comments.errMess}\n          postComment = {this.props.postComment}\n        />\n      );\n    }\n \n    return (\n     <div>\n          <Header/>\n            <TransitionGroup>\n              <CSSTransition key={this.props.location.key} classNames='page' timeout={300}>\n                <Switch>\n                  <Route path=\"/home\" component={HomePage}/>      {/* TYPE 1 */}\n                  <Route exact path=\"/aboutus\" component={()=> <About leaders={this.props.leaders}/>}/>\n                  <Route exact path=\"/menu\" component={ ()=> <div><Menu dishes={this.props.dishes}/></div>}/>     {/* TYPE 2 */}\n                  <Route exact path = \"/contactus\" component={()=><Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>}/>    \n                  <Route path=\"/menu/:dishID\" component={dishWithID}/>\n                  <Redirect to=\"/home\" />\n                </Switch>\n              </CSSTransition>\n            </TransitionGroup>\n            <Switch>\n            </Switch>\n          <Footer/>\n     </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\n\n\n\n\n//line after class defination\n  // setDishID(dishID){\n  //      this.setState({selectedDishID:dishID});\n  // }\n\n\n\n\n\n// <Route exact path=\"/menu\" \n// component={ ()=> \n// <div>\n//   <Menu dishes={this.state.dishes}/> \n// </div>\n// }/>{/* TYPE 2 */}\n\n\n// <Menu dishes={this.state.dishes} onClick={(dishID)=>{this.setDishID(dishID)}}/> \n//                     <DishDetail selectedDish={this.state.dishes.filter((dish)=> dish.id === this.state.selectedDishID)[0]}/>","import * as ActionTypes from './ActionTypes'\n\n\nexport const Dishes = (state = {\n          isLoading:true,\n          errMess:null,\n          dishes:[]\n          }, action)=>{\n               switch (action.type) {\n                    case ActionTypes.ADD_DISHES:\n                         return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n                    case ActionTypes.DISHES_LOADING:\n                         return {...state, isLoading: true, errMess: null, dishes: []};\n\n                    case ActionTypes.DISHES_FAILED:\n                         return {...state, isLoading: false, errMess: action.payload, dishes: []};\n\n                    default:\n                         return state;\n               }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n          errMess: null,\n          comments: [],\n          // isLoading:true,\n     }, action) => {\n     switch (action.type) {\n\n          case ActionTypes.ADD_COMMENTS:\n               return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n          case ActionTypes.COMMENTS_FAILED:\n               return {...state, isLoading: false, errMess: action.payload, comments: []};\n\n          case ActionTypes.ADD_COMMENT:\n               var comment = action.payload;\n               // comment.id = state.comments.length;\n               return {...state, comments: state.comments.concat(comment)};\n          default:               \n               return state;\n     }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n     errMess:null,\n     leaders:[],\n     isLoading:true,\n     },action) =>{\n     switch (action.type) {\n          case ActionTypes.ADD_LEADERS:\n               return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n          case ActionTypes.LEADERS_LOADING:\n               return {...state, isLoading: true, errMess: null, leaders: []};\n\n          case ActionTypes.LEADERS_FAILED:\n               return {...state, isLoading: false, errMess: action.payload, leaders: []};\n     \n          default:\n               return state;\n     }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state={\n     errMess:null,\n     promotions:[],\n     isLoading:true,\n},action)=>{\n     switch (action.type) {\n          case ActionTypes.ADD_PROMOS:\n               return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n          case ActionTypes.PROMOS_LOADING:\n               return {...state, isLoading: true, errMess: null, promotions: []};\n\n          case ActionTypes.PROMOS_FAILED:\n               return {...state, isLoading: false, errMess: action.payload, promotions: []};\n\n          default:\n               return state;\n     }\n}","export const InitialFeedback = {\n     fistname: '',\n     lastname: '',\n     phone: '',\n     email: '',\n     agree: false,\n     contactType: 'phone',\n     message: ''\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore,combineReducers,applyMiddleware} from 'redux'\nimport { createForms } from 'react-redux-form'\nimport { Dishes } from './dishes'\nimport { Comments } from './comments'\nimport { Leaders } from './leaders'\nimport { Promotions } from './promotions'\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms'\n\n\nexport const ConfigureStore = () =>{\n     const store = createStore(\n          combineReducers({\n               dishes: Dishes,\n               comments: Comments,\n               leaders: Leaders,\n               promotions: Promotions,\n               ...createForms({\n                    feedback: InitialFeedback\n               })\n          }),\n          applyMiddleware(thunk,logger)\n     );\n\n     return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n"," import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode><App/></React.StrictMode>,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}